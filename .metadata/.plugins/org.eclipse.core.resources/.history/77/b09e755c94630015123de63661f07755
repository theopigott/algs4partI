# Overview
* Want to sort *any* type of data.

## Comparable
* Callback = reference to executable code.
* `sort()` function *calls back* an object's `compareTo()` method.
* `Comparable` interface implements `compareTo()` method.

### `compareTo()`
Returns

* negative integer if v < w
* zero if v = w
* positive integer if v > w

Throws exception if types are incompatible or either is `null`.

Total ordering: relation v ~ w = `v.compareTo(w)` satisfies

* Antisymmetry: if v &le; w and w &le; v then v = w.
* Transitivity: if v &le; w and w &le; x then v &le; x.
* Totality: either v &le; w or w &le; v or both.

## Sorting abstractions
Will use helper functions 
* Less: returns `true` if v is less than w.
* Exchange: swaps items at indices i and j in array.

# Selection Sort
* In iteration *i*, find index *min* of smallest remaining entry, then swap `a[i]` and `a[min]`.